{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajus\\\\projects\\\\ecommerce\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileScreen() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const history = useNavigate();\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    error,\n    loading,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = {};\n  const orderListMy = useSelector(state => state.orderListMy);\n  useEffect(() => {\n    if (!userInfo) {\n      history('/login');\n    } else {\n      if (!user || !user.name || success || userInfo._id !== user._id) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({\n        'id': user._id,\n        'name': name,\n        'email': email,\n        'password': password\n      }));\n      setMessage('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"passwordConfirm\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileScreen, \"tGx7jCRVPyEuDY3YVN5aCaJLYW0=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","Form","Button","Row","Col","Table","LinkContainer","useDispatch","useSelector","Loader","Message","getUserDetails","updateUserProfile","USER_UPDATE_PROFILE_RESET","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","history","dispatch","userDetails","state","error","loading","user","userLogin","userInfo","userUpdateProfile","success","orderListMy","_id","type","submitHandler","e","preventDefault","target","value"],"sources":["C:/Users/rajus/projects/ecommerce/frontend/src/screens/ProfileScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nfunction ProfileScreen() {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const history = useNavigate();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = {}\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen"],"mappings":"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"},"metadata":{},"sourceType":"module"}